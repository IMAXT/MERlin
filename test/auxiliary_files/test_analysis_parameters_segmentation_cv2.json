{
    "analysis_tasks": [
        {
            "task": "FiducialCorrelationWarp",
            "module": "merlin.analysis.warp",
            "analysis_name": "CV2FiducialCorrelationWarp",
            "parameters": {
                "write_aligned_images": true
            }
        },
        {
            "task": "DeconvolutionPreprocess",
            "module": "merlin.analysis.preprocess",
            "analysis_name": "CV2DeconvolutionPreprocess",
            "parameters": {
                "warp_task": "CV2FiducialCorrelationWarp"
            }
        },
        {
            "task": "OptimizeIteration",
            "module": "merlin.analysis.optimize",
            "analysis_name": "CV2Optimize1",
            "parameters": {
                "preprocess_task": "CV2DeconvolutionPreprocess",
                "warp_task": "CV2FiducialCorrelationWarp",
                "fov_per_iteration": 2,
                "iteration_count": 2,
                "optimize_chromatic_correction": false
            }
        },
        {
            "task": "OptimizeIteration",
            "module": "merlin.analysis.optimize",
            "analysis_name": "CV2Optimize2",
            "parameters": {
                "preprocess_task": "CV2DeconvolutionPreprocess",
                "warp_task": "CV2FiducialCorrelationWarp",
                "fov_per_iteration": 2,
                "iteration_count": 2,
                "optimize_chromatic_correction": false,
                "previous_iteration": "CV2Optimize1"
            }
        },
        {
            "task": "Decode",
            "module": "merlin.analysis.decode",
            "analysis_name": "CV2Decode",
            "parameters": {
                "preprocess_task": "CV2DeconvolutionPreprocess",
                "optimize_task": "CV2Optimize2",
                "global_align_task": "CV2SimpleGlobalAlignment",
                "crop_width": 10,
                "remove_z_duplicated_barcodes": true,
                "z_duplicate_zPlane_threshold": 1,
                "z_duplicate_xy_pixel_threshold": 1.414
            }
        },
        {
            "task": "SimpleGlobalAlignment",
            "module": "merlin.analysis.globalalign",
            "analysis_name": "CV2SimpleGlobalAlignment"
        },
        {
            "task": "GenerateMosaic",
            "module": "merlin.analysis.generatemosaic",
            "analysis_name": "CV2GenerateMosaic",
            "parameters": {
                "global_align_task": "CV2SimpleGlobalAlignment",
                "warp_task": "CV2FiducialCorrelationWarp"
            }
        },
        {
            "task": "FilterBarcodes",
            "module": "merlin.analysis.filterbarcodes",
            "analysis_name": "CV2FilterBarcodes",
            "parameters": {
                "decode_task": "CV2Decode",
                "area_threshold": 5,
                "intensity_threshold": 1
            }
        },
        {
            "task": "GenerateAdaptiveThreshold",
            "module": "merlin.analysis.filterbarcodes",
            "analysis_name": "CV2GenerateAdaptiveThreshold",
            "parameters": {
                "decode_task": "CV2Decode",
                "run_after_task": "CV2Decode"
            }
        },
        {
            "task": "AdaptiveFilterBarcodes",
            "module": "merlin.analysis.filterbarcodes",
            "analysis_name": "CV2AdaptiveFilterBarcodes",
            "parameters": {
                "decode_task": "CV2Decode",
                "adaptive_task": "CV2GenerateAdaptiveThreshold"
            }
        },
        {
            "task": "ExportBarcodes",
            "module": "merlin.analysis.exportbarcodes",
            "analysis_tasks": "CV2ExportBarcodes",
            "parameters": {
                "filter_task": "CV2FilterBarcodes"
            }
        },
        {
            "task": "PlotPerformance",
            "module": "merlin.analysis.plotperformance",
            "analysis_name": "CV2PlotPerformance",
            "parameters": {
                "preprocess_task": "CV2DeconvolutionPreprocess",
                "optimize_task": "CV2Optimize2",
                "decode_task": "CV2Decode",
                "filter_task": "CV2AdaptiveFilterBarcodes",
                "global_align_task": "CV2SimpleGlobalAlignment"
            }
        },
        {
            "task": "WatershedSegmentNucleiCV2",
            "module": "merlin.analysis.segment",
            "analysis_name": "CV2Segment",
            "parameters": {
                "warp_task": "CV2FiducialCorrelationWarp",
                "global_align_task": "CV2SimpleGlobalAlignment",
                "membrane_channel_name": "DAPI",
                "compartment_channel_name": "DAPI"
            }
        },
        {
            "task": "CleanCellBoundaries",
            "module": "merlin.analysis.segment",
            "analysis_name": "CV2CleanCellBoundaries",
            "parameters": {
                "segment_task": "CV2Segment",
                "global_align_task": "CV2SimpleGlobalAlignment"
            }
        },
        {
            "task": "CombineCleanedBoundaries",
            "module": "merlin.analysis.segment",
            "analysis_name": "CV2CombineCleanedBoundaries",
            "parameters": {
                "cleaning_task": "CV2CleanCellBoundaries"
            }
        },
        {
            "task": "RefineCellDatabases",
            "module": "merlin.analysis.segment",
            "analysis_name": "CV2RefineCellDatabases",
            "parameters": {
                "segment_task": "CV2Segment",
                "combine_cleaning_task": "CV2CombineCleanedBoundaries"
            }
        },
        {
            "task": "PartitionBarcodes",
            "module": "merlin.analysis.partition",
            "analysis_name": "CV2PartitionBarcodes",
            "parameters": {
                "filter_task": "CV2AdaptiveFilterBarcodes",
                "assignment_task": "CV2RefineCellDatabases",
                "alignment_task": "CV2SimpleGlobalAlignment"
            }
        },
        {
            "task": "ExportPartitionedBarcodes",
            "module": "merlin.analysis.partition",
            "analysis_name": "CV2ExportPartitionedBarcodes",
            "parameters": {
                "partition_task": "CV2PartitionBarcodes"
            }
        },
        {
            "task": "ExportCellMetadata",
            "module": "merlin.analysis.segment",
            "analysis_name": "CV2ExportCellMetadata",
            "parameters": {
                "segment_task": "CV2RefineCellDatabases"
            }
        },
        {
            "task": "SumSignal",
            "module": "merlin.analysis.sequential",
            "analysis_name": "CV2SumSignal",   
            "parameters": {
                "z_index": 0,
                "apply_highpass": true,
                "warp_task": "CV2FiducialCorrelationWarp",
                "highpass_sigma": 5,
                "segment_task": "CV2RefineCellDatabases",
                "global_align_task": "CV2SimpleGlobalAlignment"
            }
        },
        {
            "task": "ExportSumSignals",
            "module": "merlin.analysis.sequential",
            "analysis_name": "CV2ExportSumSignals",
            "parameters": {
                "sequential_task": "CV2SumSignal"
            }
        }

    ]

}
